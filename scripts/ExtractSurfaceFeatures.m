function [features, featurelabels, factors] = ExtractSurfaceFeatures(surfaces, windowsize)
%function [features, featurelabels, factors] = ExtractSurfaceFeatures(surfaces, windowsize)
%  DECRIPTION
%    This function extracts the 7 features listed below from the given surfaces based on the
%    given window size.
%    Features extracted: 1. Variance
%                        2. Skewness
%                        3. Kurtosis
%                        4. Fifth Moment
%                        5. Area of Crossings
%                        6. Sum of Changes
%                        7. Sum of High Frequencies
%  INPUT
%    surfaces: An array of N clean surface data imported from the file generated by MAEVA.
%    windowsize: Number of samples in each window
%               (It should correspond to a multiple of the acquisition data rate of MAEVA).
%  OUTPUT
%    features : A N x 21 (7 features x 3 axis) matrix of unnormalized features for all surfaces.
%    featureslabels: The N ground truth labels for features data above.
%    factors: The normalization factors, to normalize the features data.

    %% Extract the features from the surface data
    surfaceindex = 1;
    for surface = 1 : size(surfaces, 2)
        if (~isempty(surfaces{surface}))
            disp(['Extracting features from data of surface ', num2str(surface)]);
            windowindex = 1;
            for windowstart = 0 : windowsize : (size(surfaces{surface}, 1) - windowsize)
                for axis = 1 : size(surfaces{surface}, 2)
                    [extractedfeatures{surfaceindex}(windowindex, axis, :), featurenames{surfaceindex}] = ExtractFeatures(surfaces{surface}(windowstart + (1:windowsize), axis));
                end          
                windowindex = windowindex + 1;
            end
            surfaceindex = surfaceindex + 1;
        end
    end
     %% Concatenate the same feature across all surfaces and compute the normalization factors for each feature
    featureindex = 1;
    for axis = 1 : size(extractedfeatures{1}, 2)
        % Feature 1 is the mean and must be removed to avoid angle bias between disk sampling.
        for feature = 2 : size(extractedfeatures{1}, 3)
            disp(['Concatenating the ', featurenames{1}{feature}, ' data of axis ', num2str(axis), ' for all surfaces']);
            concatenatedfeatures = [];
            % Concatenate the same feature by axis across all surfaces
            for surface = 1 : size(extractedfeatures, 2)
                concatenatedfeatures = [concatenatedfeatures extractedfeatures{surface}(:, axis, feature)'];
            end

            % Compute a normalization factor over the whole set
            disp(['Computing the ', featurenames{1}{feature}, ' normalization factor of axis ', num2str(axis), ' for all surfaces']);
            normalizationfactor = 1 ./ std(concatenatedfeatures);

            features(:, featureindex) = concatenatedfeatures;
            factors(featureindex) = normalizationfactor;
            featureindex = featureindex + 1;
        end
    end
    %% Ground Truth information for the samples
    featurelabels = [];
    for surface = 1 : size(extractedfeatures, 2)
        featurelabels = [featurelabels (surface * ones(1, size(extractedfeatures{surface}, 1)))];
    end
end
